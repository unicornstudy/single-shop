plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.unicornstudy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-vault-config', version: '4.0.0'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '4.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation group: 'org.springframework.batch', name: 'spring-batch-integration', version: '5.0.1'
    implementation 'org.projectlombok:lombok:1.18.20'
	implementation 'org.springframework.data:spring-data-elasticsearch:4.2.2'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation "org.testcontainers:junit-jupiter:1.17.2"
	testImplementation "org.testcontainers:mysql:1.17.2"
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task createDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static")
}

bootJar {
	dependsOn createDocument
	from ("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}


tasks.named('test') {
	useJUnitPlatform()
}